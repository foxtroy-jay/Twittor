{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/MyComponent.js\";\nimport React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\nexport default class tweets extends React.Component {\n  constructor(props, context) {\n    super();\n    this.state = {\n      userAddress: ''\n    };\n    this.contracts = context;\n  }\n\n  async componentDidMount() {\n    const accounts = await drizzle.web3.eth.getAccounts();\n    console.log(accounts, 'ACCOUNTS');\n    this.setState({\n      userAddress: accounts[0]\n    });\n  }\n\n  render() {\n    let length = 0;\n    const getNumTweetsFirstKey = Object.keys(this.props.Twittor.getNumTweets)[1];\n\n    if (this.props.Twittor.getNumTweets[getNumTweetsFirstKey]) {\n      length = this.props.Twittor.getNumTweets[getNumTweetsFirstKey].value;\n    }\n\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"TWEETS\"), React.createElement(TweetForm, {\n      contract: \"Twittor\",\n      method: \"addTweetStruct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"allTweets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, mapArray.map((tweet, idx) => {\n      return React.createElement(SingleTweet, {\n        address: this.state.userAddress,\n        index: idx,\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }).reverse()), React.createElement(\"div\", {\n      className: \"hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ContractData, {\n      contract: \"Twittor\",\n      method: \"getNumTweets\",\n      methodArgs: [this.state.userAddress],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/MyComponent.js"],"names":["React","ToastContainer","ContractData","TweetForm","SingleTweet","Drizzle","options","drizzle","tweets","Component","constructor","props","context","state","userAddress","contracts","componentDidMount","accounts","web3","eth","getAccounts","console","log","setState","render","length","getNumTweetsFirstKey","Object","keys","Twittor","getNumTweets","value","mapArray","fill","map","tweet","idx","reverse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAYC,OAAZ,CAAhB;AACA,eAAe,MAAME,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AACA,SAAKC,SAAL,GAAiBH,OAAjB;AACD;;AACD,QAAMI,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMV,OAAO,CAACW,IAAR,CAAaC,GAAb,CAAiBC,WAAjB,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,UAAtB;AACA,SAAKM,QAAL,CAAc;AAAET,MAAAA,WAAW,EAAEG,QAAQ,CAAC,CAAD;AAAvB,KAAd;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,CAAb;AACA,UAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAC3B,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,YADQ,EAE3B,CAF2B,CAA7B;;AAGA,QAAI,KAAKnB,KAAL,CAAWkB,OAAX,CAAmBC,YAAnB,CAAgCJ,oBAAhC,CAAJ,EAA2D;AACzDD,MAAAA,MAAM,GAAG,KAAKd,KAAL,CAAWkB,OAAX,CAAmBC,YAAnB,CAAgCJ,oBAAhC,EAAsDK,KAA/D;AACD;;AACD,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIP,MAAJ,EAAY;AACVO,MAAAA,QAAQ,CAACP,MAAT,GAAkBA,MAAlB;AACAO,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAAd;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,SAApB;AAA8B,MAAA,MAAM,EAAC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CACNE,GADF,CACM,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnB,aACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWC,WADtB;AAEE,QAAA,KAAK,EAAEsB,GAFT;AAGE,QAAA,GAAG,EAAEA,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KATF,EAUEC,OAVF,EADH,CAHF,EAgBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,SADX;AAEE,MAAA,MAAM,EAAC,cAFT;AAGE,MAAA,UAAU,EAAE,CAAC,KAAKxB,KAAL,CAAWC,WAAZ,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAhBF,CAFF,CADF;AA+BD;;AAxDiD","sourcesContent":["import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\n\nconst drizzle = new Drizzle(options);\nexport default class tweets extends React.Component {\n  constructor(props, context) {\n    super();\n    this.state = { userAddress: '' };\n    this.contracts = context;\n  }\n  async componentDidMount() {\n    const accounts = await drizzle.web3.eth.getAccounts();\n    console.log(accounts, 'ACCOUNTS');\n    this.setState({ userAddress: accounts[0] });\n  }\n\n  render() {\n    let length = 0;\n    const getNumTweetsFirstKey = Object.keys(\n      this.props.Twittor.getNumTweets\n    )[1];\n    if (this.props.Twittor.getNumTweets[getNumTweetsFirstKey]) {\n      length = this.props.Twittor.getNumTweets[getNumTweetsFirstKey].value;\n    }\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n    return (\n      <div className=\"App\">\n        <ToastContainer />\n        <div>\n          <h1>TWEETS</h1>\n          <TweetForm contract=\"Twittor\" method=\"addTweetStruct\" />\n          <div className=\"allTweets\">\n            {mapArray\n              .map((tweet, idx) => {\n                return (\n                  <SingleTweet\n                    address={this.state.userAddress}\n                    index={idx}\n                    key={idx}\n                  />\n                );\n              })\n              .reverse()}\n          </div>\n          <div className=\"hide\">\n            {\n              <ContractData\n                contract=\"Twittor\"\n                method=\"getNumTweets\"\n                methodArgs={[this.state.userAddress]}\n              />\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}