{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/App.js\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport './App.css'; // import web3 from './web3';\n// import twittor from './twittor';\n\nimport { DrizzleProvider, DrizzleContext } from 'drizzle-react';\nimport { LoadingContainer } from 'drizzle-react-components';\nimport './App.css';\nimport drizzleOptions from './drizzleOptions';\nimport MyComponent from './MyContainer';\nimport store from './middleware'; // class App extends React.Component {\n//   render() {\n//     console.log(this.props, 'PROPS');\n//     return (\n//       // <DrizzleProvider store={store} options={drizzleOptions}>\n//       <LoadingContainer>\n//         <MyContainer />\n//       </LoadingContainer>\n//       // </DrizzleProvider>\n//     );\n//   }\n// }\n// export default App;\n\nexport default (() => React.createElement(DrizzleContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, drizzleContext => {\n  const drizzle = drizzleContext.drizzle,\n        drizzleState = drizzleContext.drizzleState,\n        initialized = drizzleContext.initialized;\n\n  if (!initialized) {\n    return 'Loading...';\n  }\n\n  return React.createElement(MyComponent, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n}));","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/App.js"],"names":["React","DrizzleProvider","DrizzleContext","LoadingContainer","drizzleOptions","MyComponent","store","drizzleContext","drizzle","drizzleState","initialized"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP,C,CACA;AACA;;AAEA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,eAAhD;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,OAAO,WAAP;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,gBAAe,MACb,oBAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,cAAc,IAAI;AAAA,QACTC,OADS,GAC8BD,cAD9B,CACTC,OADS;AAAA,QACAC,YADA,GAC8BF,cAD9B,CACAE,YADA;AAAA,QACcC,WADd,GAC8BH,cAD9B,CACcG,WADd;;AAEjB,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,YAAP;AACD;;AAED,SAAO,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,OAAtB;AAA+B,IAAA,YAAY,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CARH,CADF","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import web3 from './web3';\n// import twittor from './twittor';\n\nimport { DrizzleProvider, DrizzleContext } from 'drizzle-react';\nimport { LoadingContainer } from 'drizzle-react-components';\n\nimport './App.css';\n\nimport drizzleOptions from './drizzleOptions';\nimport MyComponent from './MyContainer';\nimport store from './middleware';\n\n// class App extends React.Component {\n//   render() {\n//     console.log(this.props, 'PROPS');\n//     return (\n\n//       // <DrizzleProvider store={store} options={drizzleOptions}>\n//       <LoadingContainer>\n//         <MyContainer />\n//       </LoadingContainer>\n//       // </DrizzleProvider>\n//     );\n//   }\n// }\n\n// export default App;\n\nexport default () => (\n  <DrizzleContext.Consumer>\n    {drizzleContext => {\n      const { drizzle, drizzleState, initialized } = drizzleContext;\n      if (!initialized) {\n        return 'Loading...';\n      }\n\n      return <MyComponent drizzle={drizzle} drizzleState={drizzleState} />;\n    }}\n  </DrizzleContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}