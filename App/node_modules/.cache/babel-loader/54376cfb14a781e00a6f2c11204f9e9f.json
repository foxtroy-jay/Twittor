{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/ReplyTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyForm from './ReplyForm';\nconst drizzle = new Drizzle(options);\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index, replyIndex = 0) => {\n      if (replyIndex - 1 < 0) {\n        replyIndex = 0;\n      }\n\n      const result = await drizzle.contracts.Twittor.methods.getReply(address, index, replyIndex - 1).call(); // console.log(result, 'GETDATA RESULT');\n\n      return result;\n    };\n\n    this.state = {\n      tweetData: ''\n    };\n  }\n\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index, this.props.replyIndex);\n    this.setState({\n      tweetData\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    // console.log(this.state.tweetData, 'REPLY TWEET STATE');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Reply:\", this.state.tweetData));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/ReplyTweet.js"],"names":["React","Drizzle","options","ReplyForm","drizzle","SingleTweet","Component","constructor","props","getData","address","index","replyIndex","result","contracts","Twittor","methods","getReply","call","state","tweetData","componentDidMount","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,CAAYC,OAAZ,CAAhB;AAEA,eAAe,MAAMG,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAenBC,OAfmB,GAeT,OAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,UAAU,GAAG,CAApC,KAA0C;AAClD,UAAIA,UAAU,GAAG,CAAb,GAAiB,CAArB,EAAwB;AACtBA,QAAAA,UAAU,GAAG,CAAb;AACD;;AAED,YAAMC,MAAM,GAAG,MAAMT,OAAO,CAACU,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBC,QADkB,CACTP,OADS,EACAC,KADA,EACOC,UAAU,GAAG,CADpB,EAElBM,IAFkB,EAArB,CALkD,CASlD;;AACA,aAAOL,MAAP;AACD,KA1BkB;;AAEjB,SAAKM,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxB;AACA,UAAMD,SAAS,GAAG,MAAM,KAAKX,OAAL,CACtB,KAAKD,KAAL,CAAWE,OADW,EAEtB,KAAKF,KAAL,CAAWG,KAFW,EAGtB,KAAKH,KAAL,CAAWI,UAHW,CAAxB;AAKA,SAAKU,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD;;AAeDM,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKN,KAAL,CAAWC,SAArB,CAFF,CADF;AAMD;;AArCsD","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyForm from './ReplyForm';\n\nconst drizzle = new Drizzle(options);\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n    this.state = { tweetData: '' };\n  }\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(\n      this.props.address,\n      this.props.index,\n      this.props.replyIndex\n    );\n    this.setState({ tweetData });\n    console.log(this.state);\n  }\n\n  getData = async (address, index, replyIndex = 0) => {\n    if (replyIndex - 1 < 0) {\n      replyIndex = 0;\n    }\n\n    const result = await drizzle.contracts.Twittor.methods\n      .getReply(address, index, replyIndex - 1)\n      .call();\n\n    // console.log(result, 'GETDATA RESULT');\n    return result;\n  };\n\n  render() {\n    // console.log(this.state.tweetData, 'REPLY TWEET STATE');\n    return (\n      <div>\n        <h1>Reply</h1>\n        <p>Reply:{this.state.tweetData}</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}