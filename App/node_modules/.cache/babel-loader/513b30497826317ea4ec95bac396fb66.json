{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/ReplyTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyForm from './ReplyForm';\nconst drizzle = new Drizzle(options);\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index) => {\n      const result = await drizzle.contracts.Twittor.methods.getReply(address, index).call();\n      return result;\n    };\n  }\n\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index, this.props.replyIndex);\n    this.setState(tweetData);\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Address: \", this.props.address));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/ReplyTweet.js"],"names":["React","Drizzle","options","ReplyForm","drizzle","SingleTweet","Component","constructor","props","getData","address","index","result","contracts","Twittor","methods","getReply","call","componentDidMount","tweetData","replyIndex","setState","console","log","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,CAAYC,OAAZ,CAAhB;AAEA,eAAe,MAAMG,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAcnBC,OAdmB,GAcT,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AAClC,YAAMC,MAAM,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBC,QADkB,CACTN,OADS,EACAC,KADA,EAElBM,IAFkB,EAArB;AAGA,aAAOL,MAAP;AACD,KAnBkB;AAElB;;AACD,QAAMM,iBAAN,GAA0B;AACxB;AACA,UAAMC,SAAS,GAAG,MAAM,KAAKV,OAAL,CACtB,KAAKD,KAAL,CAAWE,OADW,EAEtB,KAAKF,KAAL,CAAWG,KAFW,EAGtB,KAAKH,KAAL,CAAWY,UAHW,CAAxB;AAKA,SAAKC,QAAL,CAAcF,SAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AASDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKjB,KAAL,CAAWE,OAAxB,CAFF,CADF;AAQD;;AA/BsD","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyForm from './ReplyForm';\n\nconst drizzle = new Drizzle(options);\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n  }\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(\n      this.props.address,\n      this.props.index,\n      this.props.replyIndex\n    );\n    this.setState(tweetData);\n    console.log(this.state);\n  }\n\n  getData = async (address, index) => {\n    const result = await drizzle.contracts.Twittor.methods\n      .getReply(address, index)\n      .call();\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Reply</h1>\n        <p>Address: {this.props.address}</p>\n        {/* <p>Block Num: {this.state[2]}</p> */}\n        {/* <p>Tweet: {this.state[0]}</p> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}