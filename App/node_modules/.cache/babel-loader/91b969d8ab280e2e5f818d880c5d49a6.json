{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/SingleTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyForm from './ReplyForm';\nimport ReplyTweet from './ReplyTweet';\nimport { ContractData } from 'drizzle-react-components';\nconst drizzle = new Drizzle(options);\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index) => {\n      const result = await drizzle.contracts.Twittor.methods.getEverythingTweetStruct(address, index).call();\n      return result;\n    };\n\n    this.state = {\n      displayReply: false\n    };\n  }\n\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  render() {\n    console.log(this.props, 'single tweet');\n    let length = 0;\n    const getNumReplyFirstKey = Object.keys(this.props.props.Twittor.getNumReplies)[0];\n\n    if (this.props.props.Twittor.getNumReplies[getNumReplyFirstKey]) {\n      length = this.props.props.Twittor.getNumReplies[getNumReplyFirstKey].value;\n    }\n\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    console.log(length, 'SINGLE TWEET LENGTH');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Single\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Address: \", this.props.address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Block Num: \", this.state[2]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Replies: \", length, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        displayReply: !this.state.displayReply\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Reply\"), this.state.displayReply ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ReplyTweet, {\n      address: this.props.address,\n      index: this.props.index,\n      replyIndex: this.state[3],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), ' ', length ? React.createElement(ReplyForm, {\n      contract: \"Twittor\",\n      method: \"addReply\",\n      address: this.props.address,\n      index: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Length is false\")) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"False\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Tweet: \", this.state[0]), React.createElement(\"div\", {\n      className: \"hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ContractData, {\n      contract: \"Twittor\",\n      method: \"getNumReplies\",\n      methodArgs: [this.props.address, this.props.index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/SingleTweet.js"],"names":["React","Drizzle","options","ReplyForm","ReplyTweet","ContractData","drizzle","SingleTweet","Component","constructor","props","getData","address","index","result","contracts","Twittor","methods","getEverythingTweetStruct","call","state","displayReply","componentDidMount","tweetData","setState","render","console","log","length","getNumReplyFirstKey","Object","keys","getNumReplies","value","mapArray","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,MAAMC,OAAO,GAAG,IAAIL,OAAJ,CAAYC,OAAZ,CAAhB;AAEA,eAAe,MAAMK,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAWnBC,OAXmB,GAWT,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AAClC,YAAMC,MAAM,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBC,wBADkB,CACON,OADP,EACgBC,KADhB,EAElBM,IAFkB,EAArB;AAGA,aAAOL,MAAP;AACD,KAhBkB;;AAGjB,SAAKM,KAAL,GAAa;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxB;AACA,UAAMC,SAAS,GAAG,MAAM,KAAKZ,OAAL,CAAa,KAAKD,KAAL,CAAWE,OAAxB,EAAiC,KAAKF,KAAL,CAAWG,KAA5C,CAAxB;AACA,SAAKW,QAAL,CAAcD,SAAd;AACD;;AASDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB,EAAwB,cAAxB;AAEA,QAAIkB,MAAM,GAAG,CAAb;AACA,UAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAC1B,KAAKrB,KAAL,CAAWA,KAAX,CAAiBM,OAAjB,CAAyBgB,aADC,EAE1B,CAF0B,CAA5B;;AAIA,QAAI,KAAKtB,KAAL,CAAWA,KAAX,CAAiBM,OAAjB,CAAyBgB,aAAzB,CAAuCH,mBAAvC,CAAJ,EAAiE;AAC/DD,MAAAA,MAAM,GAAG,KAAKlB,KAAL,CAAWA,KAAX,CAAiBM,OAAjB,CAAyBgB,aAAzB,CAAuCH,mBAAvC,EACNI,KADH;AAED;;AACD,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIN,MAAJ,EAAY;AACVM,MAAAA,QAAQ,CAACN,MAAT,GAAkBA,MAAlB;AACAM,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAAd;AACD;;AACDT,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,qBAApB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKlB,KAAL,CAAWE,OAAxB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKQ,KAAL,CAAW,CAAX,CAAf,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYQ,MADZ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MACP,KAAKJ,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA5B,OAAd,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAQG,KAAKD,KAAL,CAAWC,YAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWE,OADtB;AAEE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAFpB;AAGE,MAAA,UAAU,EAAE,KAAKO,KAAL,CAAW,CAAX,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKK,GALL,EAMGQ,MAAM,GACL,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAC,SADX;AAEE,MAAA,MAAM,EAAC,UAFT;AAGE,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWE,OAHtB;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAdJ,CADD,GAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3BJ,CAFF,CAJF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKO,KAAL,CAAW,CAAX,CAAX,CAtCF,EAuCE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,SADX;AAEE,MAAA,MAAM,EAAC,eAFT;AAGE,MAAA,UAAU,EAAE,CAAC,KAAKV,KAAL,CAAWE,OAAZ,EAAqB,KAAKF,KAAL,CAAWG,KAAhC,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvCF,CADF;AAiDD;;AAtFsD","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyForm from './ReplyForm';\nimport ReplyTweet from './ReplyTweet';\nimport { ContractData } from 'drizzle-react-components';\n\nconst drizzle = new Drizzle(options);\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = { displayReply: false };\n  }\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  getData = async (address, index) => {\n    const result = await drizzle.contracts.Twittor.methods\n      .getEverythingTweetStruct(address, index)\n      .call();\n    return result;\n  };\n\n  render() {\n    console.log(this.props, 'single tweet');\n\n    let length = 0;\n    const getNumReplyFirstKey = Object.keys(\n      this.props.props.Twittor.getNumReplies\n    )[0];\n\n    if (this.props.props.Twittor.getNumReplies[getNumReplyFirstKey]) {\n      length = this.props.props.Twittor.getNumReplies[getNumReplyFirstKey]\n        .value;\n    }\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n    console.log(length, 'SINGLE TWEET LENGTH');\n    return (\n      <div>\n        <h1>Single</h1>\n        <p>Address: {this.props.address}</p>\n        <p>Block Num: {this.state[2]}</p>\n        <div>\n          Replies: {length}\n          <div>\n            <button\n              onClick={() =>\n                this.setState({ displayReply: !this.state.displayReply })\n              }\n            >\n              Reply\n            </button>\n            {this.state.displayReply ? (\n              <div>\n                <ReplyTweet\n                  address={this.props.address}\n                  index={this.props.index}\n                  replyIndex={this.state[3]}\n                />{' '}\n                {length ? (\n                  <ReplyForm\n                    contract=\"Twittor\"\n                    method=\"addReply\"\n                    address={this.props.address}\n                    index={this.props.index}\n                  />\n                ) : (\n                  <h2>Length is false</h2>\n                )}\n              </div>\n            ) : (\n              <h1>False</h1>\n            )}\n          </div>\n        </div>\n\n        <p>Tweet: {this.state[0]}</p>\n        <div className=\"hide\">\n          <ContractData\n            contract=\"Twittor\"\n            method=\"getNumReplies\"\n            methodArgs={[this.props.address, this.props.index]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}